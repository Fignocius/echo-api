{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "192.168.1.41:1323",
    "basePath": "/",
    "paths": {
        "/api/list/match": {
            "get": {
                "description": "Return a list of Match service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Match.List",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date",
                        "description": "filter by start date",
                        "name": "dateStart",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "filter by end date",
                        "name": "dateEnd",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.matchListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/matchmaker/confirm": {
            "post": {
                "description": "Confirm a Match service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Match.Confirm",
                "parameters": [
                    {
                        "description": "Return match confirmation",
                        "name": "match",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formMatchConf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.confirmation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/matchmaker/match": {
            "get": {
                "description": "Return Match service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Match.Get",
                "parameters": [
                    {
                        "description": "Return match service",
                        "name": "match",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formMatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleMatch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/doctors": {
            "post": {
                "description": "Login with email \u0026 password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "auth.login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Email to login with",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.loginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.loginOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/doctors/{doct_id}": {
            "get": {
                "description": "Return Doctor data from doctor ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Doctor.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Doctor ID",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.doctOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Doctor data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Doctor.Update",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Doctor ID",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Doctor",
                        "name": "Doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/user.Doctor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.doctOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/doctors/{doct_id}/addresses": {
            "put": {
                "description": "Remove doctor address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Address.Remove",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Remove address",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.removeAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.textResponse"
                        }
                    }
                }
            }
        },
        "/doctors/{doct_id}/addresses/": {
            "get": {
                "description": "Return a list of doctor address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Address.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Doctor id",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.listAddresses"
                        }
                    }
                }
            },
            "post": {
                "description": "Create doctor address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Address.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new address",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.createAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleAddress"
                        }
                    }
                }
            }
        },
        "/doctors/{doct_id}/bank": {
            "get": {
                "description": "Bank get data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Bank.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Doctor id",
                        "name": "doct_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleBank"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update bank data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Bank.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Bank data",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/user.Bank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleBank"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Bank create with bank account data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Bank.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Bank data",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.createBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleBank"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/doctors/{doct_id}/services/": {
            "get": {
                "description": "Return doctor services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Services.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Return service from id",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.listServices"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add doctor service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Service.Add",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Doctor id",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Email to login with",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formServiceAdd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleService"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/doctors/{doct_id}/services/{serv_id}": {
            "get": {
                "description": "Get doctor service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Service.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return service from id",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Return service from id",
                        "name": "serv_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleService"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update doctor service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Service.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return service from id",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Return service from id",
                        "name": "serv_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Email to login with",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/user.Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleService"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove doctor service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Service.Remove",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Doctor ID",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Service ID",
                        "name": "serv_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleService"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/doctors/{doct_id}/specializations/": {
            "get": {
                "description": "Return doctor specializations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Specializations.List",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Doctor ID",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.listSpecResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Remove doctor specialization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Specialization.Remove",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Doctor ID",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add new specialization",
                        "name": "specialization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formSpecAdd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.textResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add doctor specialization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Specialization.Add",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Doctor ID",
                        "name": "doct_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add new specialization",
                        "name": "specialization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formSpecAdd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.textResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/market_price/procedure/{proc_id}": {
            "get": {
                "description": "Return market price for given procedure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Market price procedure.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Procedure ID",
                        "name": "proc_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.mktPrice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/market_price/specialization/{spec_id}": {
            "get": {
                "description": "Return a market price for specialization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Market price specialization.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Specialization ID",
                        "name": "spec_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.mktPrice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/onboarding/doctor": {
            "post": {
                "description": "Create a new Doctor user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Doctor.Create",
                "parameters": [
                    {
                        "description": "Doctor",
                        "name": "Doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formDoctor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.doctOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/onboarding/patient": {
            "post": {
                "description": "Create a new Patient user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Patient.Create",
                "parameters": [
                    {
                        "description": "Doctor",
                        "name": "Doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formPatient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/patients/{pati_id}": {
            "get": {
                "description": "Get patient data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Patient.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID",
                        "name": "pati_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.getResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Patient update with patient data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Patient.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID",
                        "name": "pati_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update patient data",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/user.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.getResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/patients/{pati_id}/payment-methods/creditcards": {
            "post": {
                "description": "Credit card create with credit card data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "CreditCard.Create",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID",
                        "name": "pati_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credit Card data",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formCard"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/user.CreditCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/patients/{pati_id}/payment-methods/creditcards/{crca_id}": {
            "get": {
                "description": "Credit card get",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "CreditCard.Get",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID",
                        "name": "pati_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Credit Card ID",
                        "name": "crca_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "credit card signup with credit card data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "CreditCard.Update",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID",
                        "name": "pati_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Credit Card ID",
                        "name": "crca_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credit Card data",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.formCard"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Credit card create with credit card data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "CreditCard.SoftDelete",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Patient ID",
                        "name": "pati_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Credit Card ID",
                        "name": "crca_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.singleCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "User signup with email \u0026 password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Signup to service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.User"
                        }
                    }
                }
            }
        },
        "/signup/{id}": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Show a account",
                "operationId": "get-string-by-int",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.User"
                        }
                    }
                }
            }
        },
        "/specializations": {
            "get": {
                "description": "List all specializations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Specializations.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter like name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Amount of results returned per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.listSupportSpecResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/specializations/{spec_id}/procedures": {
            "get": {
                "description": "List all procedures for a given specialization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Procedures.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Specialization ID",
                        "name": "spec_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter like name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Amount of results returned per page",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.listProceduresRsp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "account name"
                },
                "photo_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "http://test/image/1.jpg",
                        "http://test/image/2.jpg"
                    ]
                }
            }
        },
        "handler.authToken": {
            "type": "object",
            "properties": {
                "jwt": {
                    "description": "JWT token",
                    "type": "string",
                    "example": "wqeoifjweoifjwef.afoj3204jfdkjf0wjf0wefj0w9fjf..."
                },
                "user": {
                    "description": "User auth data",
                    "type": "object",
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "handler.confirmation": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/handler.confirmationMatch"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.confirmationMatch": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/user.Match"
                }
            }
        },
        "handler.createAddress": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "handler.createBank": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "agency": {
                    "type": "string"
                },
                "bank": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handler.dataer": {
            "type": "object"
        },
        "handler.detailError": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "extendedHelp": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "locationType": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "sendReport": {
                    "type": "string"
                }
            }
        },
        "handler.doctOut": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.Doctor"
                },
                "kind": {
                    "type": "string",
                    "example": "Doctor"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/handler.generalError"
                }
            }
        },
        "handler.formCard": {
            "type": "object",
            "properties": {
                "crcaID": {
                    "type": "string"
                },
                "patiID": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.formDoctor": {
            "type": "object",
            "properties": {
                "crm": {
                    "type": "string"
                },
                "documents": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/user.Info"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.formMatch": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "1202020"
                },
                "distance": {
                    "type": "integer",
                    "example": 10
                },
                "location": {
                    "type": "string",
                    "example": "-45.0000, 45.0000"
                },
                "price": {
                    "type": "integer",
                    "example": 8000
                },
                "schedule": {
                    "type": "string",
                    "example": "9:00-12:00"
                },
                "specID": {
                    "type": "string",
                    "example": "3344-3434-34344-3433443"
                }
            }
        },
        "handler.formMatchConf": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string",
                    "example": "3344-3434-34344-3433443"
                },
                "matcID": {
                    "type": "string",
                    "example": "3344-3434-34344-3433443"
                },
                "patiID": {
                    "type": "string",
                    "example": "3344-3434-34344-3433443"
                },
                "price": {
                    "type": "integer"
                },
                "procID": {
                    "type": "string",
                    "example": "3344-3434-34344-3433443"
                },
                "sescID": {
                    "type": "string",
                    "example": "3344-3434-34344-3433443"
                },
                "specID": {
                    "type": "string",
                    "example": "3344-3434-34344-3433443"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handler.formPatient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "documents": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/user.Info"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "rg": {
                    "type": "string"
                }
            }
        },
        "handler.formResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/handler.response"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.formServiceAdd": {
            "type": "object",
            "properties": {
                "addrID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "priceMin": {
                    "type": "integer"
                },
                "specID": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handler.formSpecAdd": {
            "type": "object",
            "properties": {
                "spec_id": {
                    "type": "string"
                }
            }
        },
        "handler.generalError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.detailError"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.getResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/handler.responseGet"
                },
                "kind": {
                    "type": "string",
                    "example": "Patient"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.listAddresses": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "object",
                    "$ref": "#/definitions/user.Addresses"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.listProceduresRsp": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "object",
                    "$ref": "#/definitions/support.Procedures"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string",
                    "example": "procedures"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.listResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.MatchHistory"
                    }
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.listServices": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "object",
                    "$ref": "#/definitions/user.Services"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.listSpecResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.listSpecializations"
                }
            }
        },
        "handler.listSpecRsp": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "object",
                    "$ref": "#/definitions/support.Specializations"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string",
                    "example": "specializations"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.listSpecializations": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "object",
                    "$ref": "#/definitions/user.Specializations"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string",
                    "example": "specializations"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "type": "integer"
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.listSupportSpecResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.listSpecRsp"
                }
            }
        },
        "handler.loginForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@mail.com"
                },
                "password": {
                    "type": "string",
                    "example": "mypassword123"
                }
            }
        },
        "handler.loginOut": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/handler.authToken"
                },
                "kind": {
                    "type": "string",
                    "example": "authToken"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.matchListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.listResponse"
                }
            }
        },
        "handler.mktPrice": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/support.MarketPrice"
                },
                "kind": {
                    "type": "string",
                    "example": "marketPrice"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.removeAddress": {
            "type": "object",
            "properties": {
                "addrID": {
                    "type": "integer"
                }
            }
        },
        "handler.response": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string",
                    "example": "wqeoifjweoifjwef.afoj3204jfdkjf0wjf0wefj0w9fjf..."
                },
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/user.Patient"
                }
            }
        },
        "handler.responseGet": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/user.Patient"
                }
            }
        },
        "handler.singleAddress": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.Address"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.singleBank": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.Bank"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.singleCard": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.CreditCard"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.singleMatch": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.RetMatch"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.singleService": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/user.Service"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.textResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                }
            }
        },
        "support.MarketPrice": {
            "type": "object",
            "properties": {
                "price_max": {
                    "type": "integer"
                },
                "price_min": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "support.Procedures": {
            "type": "object"
        },
        "support.Specializations": {
            "type": "object"
        },
        "user.Address": {
            "type": "object",
            "properties": {
                "addrID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "user.Addresses": {
            "type": "object"
        },
        "user.Bank": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "agency": {
                    "type": "string"
                },
                "bank": {
                    "type": "string"
                },
                "bankID": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "user.CreditCard": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "crcaID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "patiID": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "user.Doctor": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "crm": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "documents": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/user.Info"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/user.Role"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "user.Info": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "user.Match": {
            "type": "object",
            "properties": {
                "canceledAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "matcID": {
                    "type": "string"
                },
                "patiID": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "procID": {
                    "type": "string"
                },
                "sescID": {
                    "type": "string"
                },
                "specID": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "user.MatchHistory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "doctor": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "matcID": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "user.Patient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "documents": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/user.Info"
                },
                "name": {
                    "type": "string"
                },
                "patiID": {
                    "type": "string"
                },
                "rg": {
                    "type": "string"
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/user.Role"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "user.RetMatch": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "canceledAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "matcID": {
                    "type": "string"
                },
                "patiID": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "procID": {
                    "type": "string"
                },
                "servID": {
                    "type": "string"
                },
                "sescID": {
                    "type": "string"
                },
                "specID": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "user.Role": {
            "type": "object"
        },
        "user.Service": {
            "type": "object",
            "properties": {
                "addrID": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priceMin": {
                    "type": "integer"
                },
                "servID": {
                    "type": "string"
                },
                "specID": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "user.Services": {
            "type": "object"
        },
        "user.Specializations": {
            "type": "object"
        },
        "user.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/user.Info"
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/user.Role"
                },
                "userID": {
                    "type": "string"
                }
            }
        }
    }
}